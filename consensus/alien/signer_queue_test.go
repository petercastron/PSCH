// Copyright 2021 The psch Authors
// This file is part of the psch library.
//
// The psch library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The psch library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the psch library. If not, see <http://www.gnu.org/licenses/>.

// Package alien implements the delegated-proof-of-stake consensus engine.

package alien

import (
	"fmt"
	"math/big"
	"testing"

	"github.com/petercastron/PSCH/common"
	"github.com/petercastron/PSCH/params"
)

// Tests that voting is evaluated correctly for various simple and complex scenarios.
func TestQueue(t *testing.T) {
	// Define the various voting scenarios to test
	tests := []struct {
		signers        []string
		number         uint64
		maxSignerCount uint64
		historyHash    []string
		tally          map[string]uint64
		tallyminer      map[string]uint64
		punished       map[string]uint64
		SignerNumber       map[string]uint64
		result         []string // the result of current snapshot
	}{

		{
			/**
			*  signers<9 && tallyminer>=12 &&<36
			 */
			signers:        []string{"NX6299F6048bc484aa5984e32997223d62c4479504","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXCc428e225819393f6D9DB62c3534333e133A4927","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc"},
			number:         209,
			maxSignerCount: 21,
			historyHash:    []string{a","NX000000000000000000000000000000000000000000000000000000000000006b","NX000000000000000000000000000000000000000000000000000000000000006c","NX000000000000000000000000000000000000000000000000000000000000006d","NX000000000000000000000000000000000000000000000000000000000000006e","NX000000000000000000000000000000000000000000000000000000000000006f","NX0000000000000000000000000000000000000000000000000000000000000070","NX0000000000000000000000000000000000000000000000000000000000000071","NX0000000000000000000000000000000000000000000000000000000000000072","NX0000000000000000000000000000000000000000000000000000000000000073","NX0000000000000000000000000000000000000000000000000000000000000074","NX0000000000000000000000000000000000000000000000000000000000000075"},
			tally:          map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43},
			tallyminer:     map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156,"NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8":98,"NXBbA10246Bdb330EE140f4D07D22e1d2932809264":239,"NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF":12,"NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739":23,"NX22Fc14b7242f678fc2b307FE88022CDce1168608":45,"NXCeD1523679f2b149780BFe25A953141dC35020D2":0,"NXF2c4Dab8733691fe2828cdAF91b5617063501c71":5,"NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2":23,"NX5e3Ba14989701c677631810c016a38E4815De091":34,"NX07a4537E221EAB78f7DEF66e54db6d6258614b38":122},
			punished:       map[string]uint64{},
			result:         []string{"NXF2c4Dab8733691fe2828cdAF91b5617063501c71","NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2","NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF","NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8","NXCeD1523679f2b149780BFe25A953141dC35020D2","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NXBbA10246Bdb330EE140f4D07D22e1d2932809264","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX5e3Ba14989701c677631810c016a38E4815De091","NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739","NX30B2BEd691168b85D8174056507e3f167CF37d8e","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXCc428e225819393f6D9DB62c3534333e133A4927","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX6299F6048bc484aa5984e32997223d62c4479504","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXCc428e225819393f6D9DB62c3534333e133A4927"},
		},{
			/**
			*  signers >9 && tallyminer<12
			 */
			signers:        []string{"NX6299F6048bc484aa5984e32997223d62c4479504","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXCc428e225819393f6D9DB62c3534333e133A4927","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX30B2BEd691168b85D8174056507e3f167CF37d8e"},
			number:         209,
			maxSignerCount: 21,
			historyHash:    []string{a","NX000000000000000000000000000000000000000000000000000000000000006b","NX000000000000000000000000000000000000000000000000000000000000006c","NX000000000000000000000000000000000000000000000000000000000000006d","NX000000000000000000000000000000000000000000000000000000000000006e","NX000000000000000000000000000000000000000000000000000000000000006f","NX0000000000000000000000000000000000000000000000000000000000000070","NX0000000000000000000000000000000000000000000000000000000000000071","NX0000000000000000000000000000000000000000000000000000000000000072","NX0000000000000000000000000000000000000000000000000000000000000073","NX0000000000000000000000000000000000000000000000000000000000000074","NX0000000000000000000000000000000000000000000000000000000000000075"},
			tally:          map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156},
			tallyminer:     map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156,"NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8":98,"NXBbA10246Bdb330EE140f4D07D22e1d2932809264":239,"NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF":12,"NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739":23,"NX22Fc14b7242f678fc2b307FE88022CDce1168608":45,"NXCeD1523679f2b149780BFe25A953141dC35020D2":0,"NXF2c4Dab8733691fe2828cdAF91b5617063501c71":5,"NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2":23,"NX5e3Ba14989701c677631810c016a38E4815De091":34,"NX07a4537E221EAB78f7DEF66e54db6d6258614b38":122},
			punished:       map[string]uint64{},
			result:         []string{"NXBbA10246Bdb330EE140f4D07D22e1d2932809264","NX07a4537E221EAB78f7DEF66e54db6d6258614b38","NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8","NX22Fc14b7242f678fc2b307FE88022CDce1168608","NX5e3Ba14989701c677631810c016a38E4815De091","NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2","NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739","NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF","NXF2c4Dab8733691fe2828cdAF91b5617063501c71","NXCeD1523679f2b149780BFe25A953141dC35020D2","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX6299F6048bc484aa5984e32997223d62c4479504","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX30B2BEd691168b85D8174056507e3f167CF37d8e"},
		},{
			/**
			*  signers >9 && tallyminer>36
			 */
			signers:        []string{"NX6299F6048bc484aa5984e32997223d62c4479504","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXCc428e225819393f6D9DB62c3534333e133A4927","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX30B2BEd691168b85D8174056507e3f167CF37d8e"},
			number:         209,
			maxSignerCount: 21,
			historyHash:    []string{a","NX000000000000000000000000000000000000000000000000000000000000006b","NX000000000000000000000000000000000000000000000000000000000000006c","NX000000000000000000000000000000000000000000000000000000000000006d","NX000000000000000000000000000000000000000000000000000000000000006e","NX000000000000000000000000000000000000000000000000000000000000006f","NX0000000000000000000000000000000000000000000000000000000000000070","NX0000000000000000000000000000000000000000000000000000000000000071","NX0000000000000000000000000000000000000000000000000000000000000072","NX0000000000000000000000000000000000000000000000000000000000000073","NX0000000000000000000000000000000000000000000000000000000000000074","NX0000000000000000000000000000000000000000000000000000000000000075"},
			tally:          map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156},
			tallyminer:     map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156,"NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8":98,"NXBbA10246Bdb330EE140f4D07D22e1d2932809264":239,"NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF":12,"NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739":23,"NX22Fc14b7242f678fc2b307FE88022CDce1168608":45,"NXCeD1523679f2b149780BFe25A953141dC35020D2":0,"NXF2c4Dab8733691fe2828cdAF91b5617063501c71":5,"NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2":23,"NX5e3Ba14989701c677631810c016a38E4815De091":34,"NX07a4537E221EAB78f7DEF66e54db6d6258614b38":122,"NXcC62DF97CF73852a493B88ed5f128303CfB375D2":31,"NX24BEB074604C9aa85078dBA544cB4AbD42CFC421":33,"NX7Ce8a19c463eEB65d4f066Fa970473ed9f92E2A6":32,"NX7002CdC1Ad4c122f1366D901cBfc4660faBEF0C5":36,"NX015B30e7f8D6F1cd0784b9Aa2b3558753b5D1311":30,"NXC3e181737d1897C0D1a2321866E5488240D583A9":39,"NX4C15ef79A496d94d58F9E43aa8ca7620E53bDA3d":40,"NX513a4d89BA23861F190082809Ff84C766825874a":49,"NXA3f73571D506d7D1ba2e80ad1a29AB15aE6eF20C":46,"NXEa9A0c77e4AFe2DD880d79344d3a20f2196CcE20":221,"NX05983c31155E4E6AE42A4Ea666a29d7531544515":26,"NXeB71F4eB6DF2e41EcB1a95aCe2b027b7C77D4590":65,"NXa8FC905b063AA04c624519AAf0f06A57D8Fc3fe7":651,"NX93E6D3a12492D9A687112cF6771dE8C901b66Df0":33,"NXE19586624eAD5ab82d22C7e0FCB9E0A149a838b0":29,"NXC914Ba98368A97607C58c73BB0a034707d49B49a":20,"NX8eba597AF8a4C6e5a39018Eb8391707088Ab305A":24,"NX2D5b982D51128A4d09B8fF8f6f2Fa67f95608336":23,"NX910f02192264d3891A7572F83Ae345E525d3D2d9":8656,"NX0F86e95B4d7429F4C15054339deb62EFE459ed7a":3443,"NX6232EfEb1a5305b97ea3C1e2A99Ac371F71D6D0B":643,"NXcc269e10E8fB2b7892540f361547bD0058DF9Ba8":64,"NXCa1777e1c06d2F45d6FaC780fC3e4903Dadb225b":1,"NXf7b3F6F8aB3d3d26282D86b75Bab5c77CF45B398":5,"NXAAb09d8f9D30d49d493D3bbB19c995c90d94B0e1":76,"NX3868b3c5ed4be1D0acF49E916b5570519B9E7a79":34,"NX5cb0665315A739ec36A20Eefe6EEC9AB228Ec09A":85,"NX43A3FF6790122aCE8635E51D949F3B47d8ddD383":565,"NX0CF65e6a153E3CC1A6c25864BffF35A1C8f1f6D9":126,"NXf2A6935b5Fa6bB6cAB5620F551bA2206090420f4":53,"NXb7d290b2402e149B95e3d282b03C79fe3c7F35ED":43,"NX9c24FD5D7fa63479327Ea3672B3ab14ce76d0BD8":34,"NX2517E6fD231B681E3B6529F0be37CB6e90615146":56,"NX089FD3b9CCd4a3F7A0070F24e9e869fB0B1B01Aa":61},
			punished:       map[string]uint64{},
			result:         []string{"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX6299F6048bc484aa5984e32997223d62c4479504","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX6299F6048bc484aa5984e32997223d62c4479504","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927"},
		},{
		/**
		*  signers >9 && tallyminer>36 SignerNumber>0
		 */
		signers:        []string{"NX6299F6048bc484aa5984e32997223d62c4479504","NX344fFd036617151f9426b02eE3336C3310A40dD1","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXCc428e225819393f6D9DB62c3534333e133A4927","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX30B2BEd691168b85D8174056507e3f167CF37d8e"},
		number:         209,
		maxSignerCount: 21,
		historyHash:    []string{"NX0000000000000000000000000000000000000000000000000000000000000061","NX0000000000000000000000000000000000000000000000000000000000000062","NX0000000000000000000000000000000000000000000000000000000000000063","NX0000000000000000000000000000000000000000000000000000000000000064","NX0000000000000000000000000000000000000000000000000000000000000065","NX0000000000000000000000000000000000000000000000000000000000000066","NX0000000000000000000000000000000000000000000000000000000000000067","NX0000000000000000000000000000000000000000000000000000000000000068","NX0000000000000000000000000000000000000000000000000000000000000069","NX000000000000000000000000000000000000000000000000000000000000006a","NX000000000000000000000000000000000000000000000000000000000000006b","NX000000000000000000000000000000000000000000000000000000000000006c","NX000000000000000000000000000000000000000000000000000000000000006d","NX000000000000000000000000000000000000000000000000000000000000006e","NX000000000000000000000000000000000000000000000000000000000000006f","NX0000000000000000000000000000000000000000000000000000000000000070","NX0000000000000000000000000000000000000000000000000000000000000071","NX0000000000000000000000000000000000000000000000000000000000000072","NX0000000000000000000000000000000000000000000000000000000000000073","NX0000000000000000000000000000000000000000000000000000000000000074","NX0000000000000000000000000000000000000000000000000000000000000075"},
		tally:          map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156},
		tallyminer:     map[string]uint64{"NX6299F6048bc484aa5984e32997223d62c4479504":20,"NX344fFd036617151f9426b02eE3336C3310A40dD1":30,"NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b":2,"NXCc428e225819393f6D9DB62c3534333e133A4927":40,"NXE661C27247575B9eBc857FcB171bACc8F5736D3E":0,"NX407c93b9003c291771AFC6581fBE8e04Cbdca698":23,"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc":43,"NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e":5656,"NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5":232,"NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC":1,"NX30B2BEd691168b85D8174056507e3f167CF37d8e":156,"NXd195E4b553dBB0c5a1fDc4E5Bde5b0BDD6d091b8":98,"NXBbA10246Bdb330EE140f4D07D22e1d2932809264":239,"NXdDE123F7363d78C7BB7639e7EdC5C110561a52FF":12,"NX4a7719Ae49d89Fe0f0A04216f6f560DA59C31739":23,"NX22Fc14b7242f678fc2b307FE88022CDce1168608":45,"NXCeD1523679f2b149780BFe25A953141dC35020D2":0,"NXF2c4Dab8733691fe2828cdAF91b5617063501c71":5,"NXE29E6209C051A238Fc7D3ffC8f0441751e8a05B2":23,"NX5e3Ba14989701c677631810c016a38E4815De091":34,"NX07a4537E221EAB78f7DEF66e54db6d6258614b38":122,"NXcC62DF97CF73852a493B88ed5f128303CfB375D2":31,"NX24BEB074604C9aa85078dBA544cB4AbD42CFC421":33,"NX7Ce8a19c463eEB65d4f066Fa970473ed9f92E2A6":32,"NX7002CdC1Ad4c122f1366D901cBfc4660faBEF0C5":36,"NX015B30e7f8D6F1cd0784b9Aa2b3558753b5D1311":30,"NXC3e181737d1897C0D1a2321866E5488240D583A9":39,"NX4C15ef79A496d94d58F9E43aa8ca7620E53bDA3d":40,"NX513a4d89BA23861F190082809Ff84C766825874a":49,"NXA3f73571D506d7D1ba2e80ad1a29AB15aE6eF20C":46,"NXEa9A0c77e4AFe2DD880d79344d3a20f2196CcE20":221,"NX05983c31155E4E6AE42A4Ea666a29d7531544515":26,"NXeB71F4eB6DF2e41EcB1a95aCe2b027b7C77D4590":65,"NXa8FC905b063AA04c624519AAf0f06A57D8Fc3fe7":651,"NX93E6D3a12492D9A687112cF6771dE8C901b66Df0":33,"NXE19586624eAD5ab82d22C7e0FCB9E0A149a838b0":29,"NXC914Ba98368A97607C58c73BB0a034707d49B49a":20,"NX8eba597AF8a4C6e5a39018Eb8391707088Ab305A":24,"NX2D5b982D51128A4d09B8fF8f6f2Fa67f95608336":23,"NX910f02192264d3891A7572F83Ae345E525d3D2d9":8656,"NX0F86e95B4d7429F4C15054339deb62EFE459ed7a":3443,"NX6232EfEb1a5305b97ea3C1e2A99Ac371F71D6D0B":643,"NXcc269e10E8fB2b7892540f361547bD0058DF9Ba8":64,"NXCa1777e1c06d2F45d6FaC780fC3e4903Dadb225b":1,"NXf7b3F6F8aB3d3d26282D86b75Bab5c77CF45B398":5,"NXAAb09d8f9D30d49d493D3bbB19c995c90d94B0e1":76,"NX3868b3c5ed4be1D0acF49E916b5570519B9E7a79":34,"NX5cb0665315A739ec36A20Eefe6EEC9AB228Ec09A":85,"NX43A3FF6790122aCE8635E51D949F3B47d8ddD383":565,"NX0CF65e6a153E3CC1A6c25864BffF35A1C8f1f6D9":126,"NXf2A6935b5Fa6bB6cAB5620F551bA2206090420f4":53,"NXb7d290b2402e149B95e3d282b03C79fe3c7F35ED":43,"NX9c24FD5D7fa63479327Ea3672B3ab14ce76d0BD8":34,"NX2517E6fD231B681E3B6529F0be37CB6e90615146":56,"NX089FD3b9CCd4a3F7A0070F24e9e869fB0B1B01Aa":61},
		SignerNumber:   map[string]uint64{"NX4C15ef79A496d94d58F9E43aa8ca7620E53bDA3d":4,"NX910f02192264d3891A7572F83Ae345E525d3D2d9":12,"NX0F86e95B4d7429F4C15054339deb62EFE459ed7a":3,"NXa8FC905b063AA04c624519AAf0f06A57D8Fc3fe7":34,"NX6232EfEb1a5305b97ea3C1e2A99Ac371F71D6D0B":3,"NX43A3FF6790122aCE8635E51D949F3B47d8ddD383":1,"NXBbA10246Bdb330EE140f4D07D22e1d2932809264":5},
		punished:       map[string]uint64{},
		result:         []string{"NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX6299F6048bc484aa5984e32997223d62c4479504","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927","NXBE205536ad29B1c3133dAdFa567D3fc8C0edc27e","NX88F9a3C5A8462F6CDDB95f95879A1c1FCF2D56c5","NX6e20084Fa3210535f9Eaf067550ea42c887d3BdC","NX6299F6048bc484aa5984e32997223d62c4479504","NX407c93b9003c291771AFC6581fBE8e04Cbdca698","NX38bD943AaCE93E1e5e4ca2F996562d5e4B88270b","NXF431d6AA5E7aea6b9970D4bE553738Cbaa1BF2Cc","NXE661C27247575B9eBc857FcB171bACc8F5736D3E","NXCc428e225819393f6D9DB62c3534333e133A4927"},
	    },
		//{
		//	addrNames:      []string{"A", "B", "C", "D","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"},
		//	signers:        []string{"A", "B", "C", "D","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"},
		//	number:         209,
		//	maxSignerCount: 21,
		//	historyHash:    []string{"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t"},
		//	tally:          map[string]uint64{"D": 5, "A": 30, "E": 20, "B": 10, "C": 12, "F": 1, "G": 4, "H": 34, "I": 24, "J": 23, "K": 10},
		//	punished:       map[string]uint64{},
		//	result:         []string{"A", "B", "C"},
		//},

	}

	// Run through the scenarios and test them
	for i, tt := range tests {
		candidateNeedPD = false
		//// Create the account pool and generate the initial set of all address in addrNames
		//accounts := newTesterAccountPool()
		//
		////ParamAdd :=make(map[common.Address]string)
		//ipados := [] string{
		//	"AA", "AB", "AC", "AD","AE","AF","AG","AH","AI","AJ","AK","AL","AM","AN","AO","AP","AQ","AR","AS","AT","AU","AW","AX","AY","AZ","BA","BB","BC","BD","BE","BF","BG","BH","BI",
		//}
		//addrNames := make([]common.Address, len(ipados))
		//for j, signer := range ipados {
		//	addrNames[j] = accounts.address(signer)
		//	//ParamAdd[addrNames[j]] = signer
		//
		//}
		//fmt.Println(addrNames)
		//for j := 0; j < len(addrNames); j++ {
		//	for k := j + 1; k < len(addrNames); k++ {
		//		if bytes.Compare(addrNames[j][:], addrNames[k][:]) > 0 {
		//			addrNames[j], addrNames[k] = addrNames[k], addrNames[j]
		//		}
		//	}
		//}

		snap := &Snapshot{
			config:   &params.AlienConfig{MaxSignerCount: tt.maxSignerCount},
			Number:   tt.number,
			LCRS:     1,
			Tally:    make(map[common.Address]*big.Int),
			TallyMiner: make(map[common.Address]*CandidateState),
			Punished: make(map[common.Address]uint64),
			CandidatePledge: make(map[common.Address]*PledgeItem),
		}

		snap.Hash.SetBytes([]byte(tt.historyHash[len(tt.historyHash)-1]))
		for _, hash := range tt.historyHash {
			var hh common.Hash
			hh.SetBytes([]byte(hash))
			snap.HistoryHash = append(snap.HistoryHash, hh)
		}
		for signer, tally := range tt.tally {
			snap.Tally[common.HexToAddress(signer)] = big.NewInt(int64(tally))
		}
		for signer, tally := range tt.tallyminer {
			SignerNumber:= uint64(0)
			if _, ok := tt.SignerNumber[signer]; ok {
				SignerNumber = tt.SignerNumber[signer]
			}
			//fmt.Println("test stake ",tally)
			snap.TallyMiner[common.HexToAddress(signer)] =  &CandidateState{
				SignerNumber:SignerNumber,
				Stake:        big.NewInt(int64(tally)),
			}
			//fmt.Println("addr:",accounts.address(signer))
			if _, ok := snap.Tally[common.HexToAddress(signer)]; !ok {
				snap.CandidatePledge[common.HexToAddress(signer)] = &PledgeItem{
					Amount: big.NewInt(36),
					PledgeType:uint32(0),
					Playment:big.NewInt(0),
					LockPeriod:uint32(0),
					RlsPeriod:uint32(0),
					Interval:uint32(0),
					StartHigh:uint64(0),
					TargetAddress:common.HexToAddress("NX0000000000000000000000000000000000000000"),
					RevenueAddress:common.HexToAddress("NX0000000000000000000000000000000000000000"),
					RevenueContract:common.HexToAddress("NX0000000000000000000000000000000000000000"),
					MultiSignature:common.HexToAddress("NX0000000000000000000000000000000000000000"),
				}
			}

		}
		for signer, punish := range tt.punished {
			snap.Punished[common.HexToAddress(signer)] = punish
		}

		signerQueue, err := snap.createSignerQueue()
		fmt.Println("start=",i,"test tally ",len(tt.tally)," tallyminer",len(tt.tallyminer),len(signerQueue))
		//
		if err != nil {
			t.Errorf("test %d: create signer queue fail , err = %s", i, err)
			continue
		}
		//if len(tt.result) == 0 {
		//	for j, signer := range signerQueue {
		//		if j >= 1 && signerQueue[j-1].String() < signerQueue[j].String() {
		//			t.Errorf("test %d: result is not correct, signerQueue(%d) %s larger than signerQueue(%d) %s ", i, j, signer.Hex(), j-1, signerQueue[j-1].Hex())
		//		}
		//	}
		//} else {
		//	if len(signerQueue) != len(tt.result) {
		//		t.Errorf("test %d: length of result is not correct. len(signerQueue) is %d, but len(tt.result) is %d", i, len(signerQueue), len(tt.result))
		//		continue
		//	}
		issucc := false
			for j, signer := range signerQueue {
				if signer.Hex() != tt.result[j] {
					issucc = true
					t.Errorf("test %d: result is not correct signerQueue(%d) is %s, but result(%d) is %s", i, j, signer.Hex(), j, tt.result[j])
				}
			}
			if issucc {
				for i,signerAddr := range signerQueue {
					fmt.Println("signerQueue","No.",i,signerAddr)
				}
			}
		//}

	}


}
func TestArray(t *testing.T) {
	accounts := newTesterAccountPool()
	var candidatePledgeSlice TallySlice
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("A"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("B"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("C"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("D"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("E"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("F"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("G"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("H"), big.NewInt(1)})
	candidatePledgeSlice=append(candidatePledgeSlice, TallyItem{accounts.address("I"), big.NewInt(1)})
	for  key,value := range candidatePledgeSlice{
		fmt.Println("print-------","key",key,"value",value.addr)
	}
	for  key,value := range candidatePledgeSlice[2:3]{
       fmt.Println("print","key",key,"value",value.addr)
	}

}